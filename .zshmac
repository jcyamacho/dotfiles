# HOMEBREW (package manager for OSX): https://brew.sh/
export HOMEBREW_NO_ENV_HINTS=1
local brew_file="/opt/homebrew/bin/brew"
if [ ! -f $brew_file ]; then
    info "Installing brew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi
eval "$($brew_file shellenv)"

alias brewup="brew update && brew upgrade && brew cleanup --prune=all"

# fonts
install-fonts() {
    info "Installing fonts..."
    brew install --cask font-monaspace
    brew install --cask font-hack-nerd-font
    brew install --cask font-jetbrains-mono
    brew install --cask font-jetbrains-mono-nerd-font
}

# GITHUB_CLI (GitHub on the command line): https://github.com/cli/cli
if ! exists gh; then
    info "Installing gh-cli..."
    brew install gh
fi

# JQ (command-line JSON processor): https://jqlang.github.io/jq/
if ! exists jq; then
    info "Installing jq..."
    brew install jq
fi

# rbenv (Ruby version manager): https://github.com/rbenv/rbenv
if ! exists rbenv; then
    info "Installing rbenv..."
    brew install rbenv
fi
eval "$(rbenv init - --no-rehash zsh)"

# pyenv (Python version manager): https://github.com/pyenv/pyenv
if ! exists pyenv; then
    info "Installing pyenv..."
    brew install pyenv
fi
eval "$(pyenv init -)"

# go (Go programming language): https://golang.org/
if ! exists go; then
    info "Installing go..."
    brew install go
fi

alias gmt="go mod tidy"

gmi() {
    local namespace=$(pwd | grep -o 'github.com.*')
    if [[ -z $namespace ]]; then
        namespace=$(basename "$(pwd)")
    fi

    go mod init $namespace
}

create-cf-worker() {
    bun create hono@latest --pm bun --template cloudflare-workers --install "$1"
    cd "$1"

    bun add -D @biomejs/biome
    bunx biome init
    jq "del(.formatter.indentStyle)" biome.json > tmp.json && mv tmp.json biome.json
    jq ".formatter.useEditorconfig = true" biome.json > tmp.json && mv tmp.json biome.json
    jq ".vcs.enabled = true" biome.json > tmp.json && mv tmp.json biome.json
    jq ".vcs.useIgnoreFile = true" biome.json > tmp.json && mv tmp.json biome.json

    jq '.scripts.typegen = "wrangler types --env-interface CloudflareBindings"' package.json > tmp.json && mv tmp.json package.json
    jq '.scripts.check = "biome check --write"' package.json > tmp.json && mv tmp.json package.json
    echo "# $1" > README.md

    bun install --save-text-lockfile
    rm bun.lockb

    curl https://www.toptal.com/developers/gitignore/api/macos,linux,windows,visualstudiocode,node > .gitignore
    echo "" >> .gitignore
    echo "# Wrangler" >> .gitignore
    echo ".wrangler" >> .gitignore
    echo ".dev.vars" >> .gitignore

    curl https://raw.githubusercontent.com/JS-DevTools/template-node-typescript/refs/heads/master/.editorconfig > .editorconfig

    bunx biome format --write
    git init
    git add --all
    git commit --message "chore: initial commit"
}
